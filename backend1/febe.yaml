apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
  labels:
    app: frontend
spec:
  template:
    metadata:
      labels:
        app: frontend
    spec:
      containers:
        - name: frontend
          image: saffrontend:latest
          imagePullPolicy: Never
  replicas: 1
  selector:
      matchLabels:
        app: frontend
---
kind: Service
apiVersion: v1
metadata:
  name: frontend
  labels:
    app: frontend
spec:
  type: ClusterIP
  ports:
  - port: 8080
    targetPort: 8080
    name: frontend
  selector:
    app: frontend
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend1
  labels:
    app: backend1
spec:
  template:
    metadata:
      labels:
        app: backend1
    spec:
      containers:
        - name: backend1
          image: safbackend1:latest
          imagePullPolicy: Never
  replicas: 1
  selector:
      matchLabels:
        app: backend1
---
kind: Service
apiVersion: v1
metadata:
  name: backend1
  labels:
    app: backend1
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 8081
    name: backend1
  selector:
    app: backend1
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: backend-ingress
spec:
  rules:
    - host: backend1
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: backend1
                port:
                  number: 80
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend2
  labels:
    app: backend2
spec:
  template:
    metadata:
      labels:
        app: backend2
    spec:
      containers:
        - name: backend2
          image: safbackend2:latest
          imagePullPolicy: Never
  replicas: 1
  selector:
      matchLabels:
        app: backend2
---
kind: Service
apiVersion: v1
metadata:
  name: backend2
  labels:
    app: backend2
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 8082
    name: backend2
  selector:
    app: backend2
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: frontend-ingress
spec:
  ingressClassName: kong
  rules:
  - http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: frontend
            port:
              number: 8080
      - path: /api
        pathType: Prefix      
        backend:
          service:
            name: backend1
            port:
              number: 80              
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: backend-ingress
spec:
  ingressClassName: kong
  rules:
  - http:
      paths:
      - path: /api
        pathType: Prefix
        backend:
          service:
            name: backend1
            port:
              number: 80